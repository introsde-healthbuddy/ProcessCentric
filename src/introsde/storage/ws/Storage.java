
package introsde.storage.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import introsde.adapter.ws.Exercise;
import introsde.adapter.ws.Food;
import introsde.localdatabase.soap.Activity;
import introsde.localdatabase.soap.Goal;
import introsde.localdatabase.soap.Measure;
import introsde.localdatabase.soap.Person;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Storage", targetNamespace = "http://ws.storage.introsde/")
@XmlSeeAlso({
    introsde.localdatabase.soap.ObjectFactory.class,
    introsde.adapter.ws.ObjectFactory.class,
    introsde.storage.ws.ObjectFactory.class
})
public interface Storage {


    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Goal>
     */
    @WebMethod
    @WebResult(name = "goal", targetNamespace = "")
    @RequestWrapper(localName = "readGoal", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadGoal")
    @ResponseWrapper(localName = "readGoalResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadGoalResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readGoalRequest", output = "http://ws.storage.introsde/Storage/readGoalResponse")
    public List<Goal> readGoal(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId);

    /**
     * 
     * @param foodId
     * @return
     *     returns introsde.adapter.ws.Food
     */
    @WebMethod
    @WebResult(name = "food", targetNamespace = "")
    @RequestWrapper(localName = "getFood", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetFood")
    @ResponseWrapper(localName = "getFoodResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetFoodResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getFoodRequest", output = "http://ws.storage.introsde/Storage/getFoodResponse")
    public Food getFood(
        @WebParam(name = "foodId", targetNamespace = "")
        int foodId);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "createPerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreatePerson")
    @ResponseWrapper(localName = "createPersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreatePersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/createPersonRequest", output = "http://ws.storage.introsde/Storage/createPersonResponse")
    public void createPerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Person>
     */
    @WebMethod
    @WebResult(name = "people", targetNamespace = "")
    @RequestWrapper(localName = "getPeopleList", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetPeopleList")
    @ResponseWrapper(localName = "getPeopleListResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetPeopleListResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getPeopleListRequest", output = "http://ws.storage.introsde/Storage/getPeopleListResponse")
    public List<Person> getPeopleList();

    /**
     * 
     * @param idPerson
     * @return
     *     returns introsde.localdatabase.soap.Person
     */
    @WebMethod
    @WebResult(name = "person", targetNamespace = "")
    @RequestWrapper(localName = "readPerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPerson")
    @ResponseWrapper(localName = "readPersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readPersonRequest", output = "http://ws.storage.introsde/Storage/readPersonResponse")
    public Person readPerson(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson);

    /**
     * 
     * @param person
     */
    @WebMethod
    @RequestWrapper(localName = "updatePerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePerson")
    @ResponseWrapper(localName = "updatePersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/updatePersonRequest", output = "http://ws.storage.introsde/Storage/updatePersonResponse")
    public void updatePerson(
        @WebParam(name = "person", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Person> person);

    /**
     * 
     * @param idPerson
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "success", targetNamespace = "")
    @RequestWrapper(localName = "deletePerson", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeletePerson")
    @ResponseWrapper(localName = "deletePersonResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeletePersonResponse")
    @Action(input = "http://ws.storage.introsde/Storage/deletePersonRequest", output = "http://ws.storage.introsde/Storage/deletePersonResponse")
    public int deletePerson(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson);

    /**
     * 
     * @param idPerson
     * @param measureType
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readPersonHistory", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonHistory")
    @ResponseWrapper(localName = "readPersonHistoryResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonHistoryResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readPersonHistoryRequest", output = "http://ws.storage.introsde/Storage/readPersonHistoryResponse")
    public List<Measure> readPersonHistory(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Measure>
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readMeasureTypes", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadMeasureTypes")
    @ResponseWrapper(localName = "readMeasureTypesResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadMeasureTypesResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readMeasureTypesRequest", output = "http://ws.storage.introsde/Storage/readMeasureTypesResponse")
    public List<Measure> readMeasureTypes();

    /**
     * 
     * @param measureId
     * @param idPerson
     * @param measureType
     * @return
     *     returns introsde.localdatabase.soap.Measure
     */
    @WebMethod
    @WebResult(name = "measure", targetNamespace = "")
    @RequestWrapper(localName = "readPersonMeasure", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonMeasure")
    @ResponseWrapper(localName = "readPersonMeasureResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadPersonMeasureResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readPersonMeasureRequest", output = "http://ws.storage.introsde/Storage/readPersonMeasureResponse")
    public Measure readPersonMeasure(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measureType", targetNamespace = "")
        String measureType,
        @WebParam(name = "measureId", targetNamespace = "")
        Long measureId);

    /**
     * 
     * @param idPerson
     * @param measure
     */
    @WebMethod
    @RequestWrapper(localName = "savePersonMeasure", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SavePersonMeasure")
    @ResponseWrapper(localName = "savePersonMeasureResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SavePersonMeasureResponse")
    @Action(input = "http://ws.storage.introsde/Storage/savePersonMeasureRequest", output = "http://ws.storage.introsde/Storage/savePersonMeasureResponse")
    public void savePersonMeasure(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Measure> measure);

    /**
     * 
     * @param idPerson
     * @param measure
     */
    @WebMethod
    @RequestWrapper(localName = "updatePersonMeasure", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePersonMeasure")
    @ResponseWrapper(localName = "updatePersonMeasureResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdatePersonMeasureResponse")
    @Action(input = "http://ws.storage.introsde/Storage/updatePersonMeasureRequest", output = "http://ws.storage.introsde/Storage/updatePersonMeasureResponse")
    public void updatePersonMeasure(
        @WebParam(name = "idPerson", targetNamespace = "")
        Long idPerson,
        @WebParam(name = "measure", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Measure> measure);

    /**
     * 
     * @param personId
     * @return
     *     returns java.util.List<introsde.localdatabase.soap.Activity>
     */
    @WebMethod
    @WebResult(name = "activity", targetNamespace = "")
    @RequestWrapper(localName = "readActivity", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadActivity")
    @ResponseWrapper(localName = "readActivityResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.ReadActivityResponse")
    @Action(input = "http://ws.storage.introsde/Storage/readActivityRequest", output = "http://ws.storage.introsde/Storage/readActivityResponse")
    public List<Activity> readActivity(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId);

    /**
     * 
     * @param activity
     * @param personId
     */
    @WebMethod
    @RequestWrapper(localName = "createActivity", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreateActivity")
    @ResponseWrapper(localName = "createActivityResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreateActivityResponse")
    @Action(input = "http://ws.storage.introsde/Storage/createActivityRequest", output = "http://ws.storage.introsde/Storage/createActivityResponse")
    public void createActivity(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activity", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Activity> activity);

    /**
     * 
     * @param activity
     * @param personId
     */
    @WebMethod
    @RequestWrapper(localName = "updateActivity", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdateActivity")
    @ResponseWrapper(localName = "updateActivityResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdateActivityResponse")
    @Action(input = "http://ws.storage.introsde/Storage/updateActivityRequest", output = "http://ws.storage.introsde/Storage/updateActivityResponse")
    public void updateActivity(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "activity", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Activity> activity);

    /**
     * 
     * @param activityId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "succes", targetNamespace = "")
    @RequestWrapper(localName = "deleteActivity", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeleteActivity")
    @ResponseWrapper(localName = "deleteActivityResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeleteActivityResponse")
    @Action(input = "http://ws.storage.introsde/Storage/deleteActivityRequest", output = "http://ws.storage.introsde/Storage/deleteActivityResponse")
    public int deleteActivity(
        @WebParam(name = "activityId", targetNamespace = "")
        Long activityId);

    /**
     * 
     * @param goal
     * @param personId
     */
    @WebMethod
    @RequestWrapper(localName = "createGoal", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreateGoal")
    @ResponseWrapper(localName = "createGoalResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.CreateGoalResponse")
    @Action(input = "http://ws.storage.introsde/Storage/createGoalRequest", output = "http://ws.storage.introsde/Storage/createGoalResponse")
    public void createGoal(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "goal", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Goal> goal);

    /**
     * 
     * @param goal
     * @param personId
     */
    @WebMethod
    @RequestWrapper(localName = "updateGoal", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdateGoal")
    @ResponseWrapper(localName = "updateGoalResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.UpdateGoalResponse")
    @Action(input = "http://ws.storage.introsde/Storage/updateGoalRequest", output = "http://ws.storage.introsde/Storage/updateGoalResponse")
    public void updateGoal(
        @WebParam(name = "personId", targetNamespace = "")
        Long personId,
        @WebParam(name = "goal", targetNamespace = "", mode = WebParam.Mode.INOUT)
        Holder<Goal> goal);

    /**
     * 
     * @param goalId
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "succes", targetNamespace = "")
    @RequestWrapper(localName = "deleteGoal", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeleteGoal")
    @ResponseWrapper(localName = "deleteGoalResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.DeleteGoalResponse")
    @Action(input = "http://ws.storage.introsde/Storage/deleteGoalRequest", output = "http://ws.storage.introsde/Storage/deleteGoalResponse")
    public int deleteGoal(
        @WebParam(name = "goalId", targetNamespace = "")
        Long goalId);

    /**
     * 
     * @param text
     * @return
     *     returns java.util.List<introsde.adapter.ws.Food>
     */
    @WebMethod
    @WebResult(name = "foods", targetNamespace = "")
    @RequestWrapper(localName = "searchFood", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SearchFood")
    @ResponseWrapper(localName = "searchFoodResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.SearchFoodResponse")
    @Action(input = "http://ws.storage.introsde/Storage/searchFoodRequest", output = "http://ws.storage.introsde/Storage/searchFoodResponse")
    public List<Food> searchFood(
        @WebParam(name = "text", targetNamespace = "")
        String text);

    /**
     * 
     * @return
     *     returns java.util.List<introsde.adapter.ws.Exercise>
     */
    @WebMethod
    @WebResult(name = "exercises", targetNamespace = "")
    @RequestWrapper(localName = "getExercises", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetExercises")
    @ResponseWrapper(localName = "getExercisesResponse", targetNamespace = "http://ws.storage.introsde/", className = "introsde.storage.ws.GetExercisesResponse")
    @Action(input = "http://ws.storage.introsde/Storage/getExercisesRequest", output = "http://ws.storage.introsde/Storage/getExercisesResponse")
    public List<Exercise> getExercises();

}
